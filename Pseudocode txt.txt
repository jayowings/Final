////Ideas
minesweeper
*Uno
username/password database
Settlers of Catan
*Codebreaker Game
*Tsuro




Game console

if input game name is (per gamename)
include and run game


Codebreaker game
computer or player choice
if computer
create an array[5] with five set values
until all five are correct or no turns remain
    player input string of values (separated by a comma for ease of access, no spaces)
    check values
        per value == add to a count, remove value from player array **create temp computer array for next check without values that are exact matches
        then, if remaining player values in computer array, add to a seperate count
    display checks
if player
until all five are correct or no turns remain
    computer displays array[5] (first iteration all values are random)
    player inputs correct and "in but not correct" values
    computer saves # values, randomizing the rest (# based loosely on num correct and in)
    if all 5 were correct, computer wins

computer turn logic
*flags
save guess (in a linked list?) in previous guess value (initialized as [0,0,0,0,0]) along with prevCorrect and prevAlmost
if(prevCorrect + prevAlmost <> Correct + Almost){
    greater than {
        if num changed values == difference, changed values in prevguess are flagged as "ALMOST" and new values are flagged as FALSE (position is irrelevant for num changed values)
    }less than {
        if num changed values == difference, new values are flagged as ALMOST and prev values are flagged as FALSE (position is irrelevant for num changed values)
    }
}
if(prevCorrect <> Correct){
    greater than{
        if num changed values == difference, changed values in prevguess are flagged as TRUE and new values are flagged as ALMOST or FALSE based on change in prevAlmost->Almost
    }less than{
        if num changed values == difference, new values are flagged as TRUE and prev values are flagged as FALSE or ALMOST based on change in prevAlmost->Almost
    }
    *****only one TRUE value can exist per previousGuesses[8] array (value checker)
}

*manipulation
save correct as prevCorrect
for(value in code == true){
    Correct-- (ignore values known as TRUE)
}
if(Almost > 0 and Correct == 0){
    shift all values left one (skipping over true values), add new value in [4]
    repeat shift for values that are ALMOST in given location ([0] is stored at [4])
}else if(Correct > 0){
    add new value in [4], unless previous changes (location matters) == 1(or 2 if other changed value == TRUE), then new value(skipping known FALSE or ALMOST in given position) is placed at [previous change - 1(skipping TRUE)]
}else if(Correct == 0 and Almost == 0){
    flag all values as FALSE in all positions (ignoring any values marked TRUE)
    New(UNKNOWN) value for all FALSE
}











2 Classes
    class Code
    
Variable
    string choice;
Struct or Enum
    enum INCODE{} stuct code{}
Array
    int computerCode[5];
Function
    void Pguess();
Control structure (for loop, while loop, if statement, or switch statement)
    Whole Game Console is while and ifs
